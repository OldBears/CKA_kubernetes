一、Pod控制器进阶

  1、大部分资源的配置清单：
      
      (1)apiversion
      以group/version的方式定义
          #kubectl api-versions,查看
      (2)kind：资源类别
      Pod ReplicaSet, Deployment, Statefulset, DaemonSet, Job, Crontab
      
      (3)metadata：元数据
        name
        namespace
        labels
        annotations
        
        selflink每个资源的引用PATH
          /api/GROUP/version/namespaces/NAMESPACE/TYPE/NAME
       
       (4)spec:期望的状态，disired state
       
       (5)status:当前状态
       
 2、pod资源
 
      spec.containers <[]object>
      - name (string)
        image <string>
        imagePullPolicy <string>
        
          Always：不管镜像是否存在都会进行一次拉取。
          Never：不管镜像是否存在都不会进行拉取
          IfNotPresent：只有镜像不存在时，才会进行镜像拉取。
      注意：
          默认为IfNotPresent，但:latest标签的镜像默认为Always。
          拉取镜像时docker会进行校验，如果镜像中的MD5码没有变，则不会拉取镜像数据。
          生产环境中应该尽量避免使用:latest标签，而开发环境中可以借助:latest标签自动拉取最新的镜像。
          
        command
          https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/
          
      标签:
      
        key=value
          key:由字母、数字、_、-、.
          value:可以为空，只能以字母或数字开头及结尾，中间可使用
        
        A、为pod-demo创建新的标签
        # kubectl label pods pod-demo release=canary
        # kubectl get pods --show-labels
          NAME                      READY   STATUS    RESTARTS   AGE     LABELS
          nginx1-55fb7cfccd-6mj7f   1/1     Running   0          5h16m   pod-template-hash=55fb7cfccd,run=nginx1
          pod-demo                  2/2     Running   3          31m     app=myapp,release=canary,tier=frontend
        
        B、为pod-demo覆盖旧的标签
        
        # kubectl label pods pod-demo release=stable
        error: 'release' already has a value (canary), and --overwrite is false
        # kubectl label pods pod-demo release=stable --overwrite
        pod/pod-demo labeled
        # kubectl get pods --show-labels
        NAME                      READY   STATUS    RESTARTS   AGE     LABELS
        nginx1-55fb7cfccd-6mj7f   1/1     Running   0          5h19m   pod-template-hash=55fb7cfccd,run=nginx1
        pod-demo                  2/2     Running   3          33m     app=myapp,release=stable,tier=frontend
      
        C、查询拥有stable标签的pod
        
        [root@master ~]# kubectl get pods -l release,app
        NAME       READY   STATUS    RESTARTS   AGE
        pod-demo   2/2     Running   4          37m

        D、标签等值器
        等值关系：=、==、！=，查询的时候用，比如kubectl get pods -l release!=stable
        集合关系：
                KEY in (VALUE1,VALUE2,...)
                KEY notin (VALUE1,...) 
                !KEY
                
        # kubectl get pods -l "release in (stable,run,beta)"
        NAME       READY   STATUS    RESTARTS   AGE
        pod-demo   2/2     Running   7          64m
        [root@master ~]# kubectl get pods -l "release notin (stable,run,beta)"
        NAME                      READY   STATUS    RESTARTS   AGE
        nginx1-55fb7cfccd-6mj7f   1/1     Running   0          5h50m

        E、许多资源支持内嵌字段定义其使用的标签选择器
        
            matchLables:直接给定键值
            matchExpressions:基于给定的表达式来定义使用标签选择器
    
